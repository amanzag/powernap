[powernap]
# This is the configuration file for PowerNap.
# See powernap(1) for more information.

# This file is Python syntax, and will be sourced by the powernap daemon
# on start. To enact changes to this configuration, restart the daemon.
# Example:
#   /etc/init.d/powernap restart

# The ACTION_METHOD variable determines what action to take.
# The possible actions are:
# 0 - Best-effort
# 1 - suspend
# 2 - hibernate
# 3 - poweroff
# 4 - powersave
# The default mode of operation is Best-effort. First, it will try a user-
# defined script at /etc/powernap/action, or suspend, hibernate, poweroff
# The powersave method will use the pm-powersave command and will execute
# hooks that are locate in /etc/pm/power.d
ACTION_METHOD = 0

# Number of seconds that all processes must be absent from the process table and
# no keyboard activity on any terminals.
# The default is an absence period of 5 minutes.
# Example:
#   ABSENT_SECONDS = 300
ABSENT_SECONDS = 300

# Grace period, after ABSENT_SECONDS have elapsed with all of MONITORED_PROCESSES
# absent from the process table, that the system will allow for an administrator
# to kill powernapd and thereby cancel the /usr/sbin/powernap action.
# The default grace period is 60 seconds.
# Example:
#   GRACE_SECONDS = 60
GRACE_SECONDS = 60

# The powernap daemon will wake every INTERVAL_SECONDS and check the process
# table for matching processes.  Lower values of INTERVAL_SECONDS will provide
# more detailed process monitoring but will consume more system resources.
# Higher values of INTERVAL_SECONDS will consume less system resources, but
# might miss processes that execute for less than INTERVAL_SECONDS.
# The minimum runtime of a MONITORED_PROCESSES should not be less than
# INTERVAL_SECONDS.
# The default interval is 1 second.
# Example:
#   INTERVAL_SECONDS = 1
INTERVAL_SECONDS = 1

# The powernap daemon logs errors to /var/log/powernap.err, and some basic
# information to /var/log/powernap.log.  To change the verbosity of this
# logging, set DEBUG to 0, 1, 2, or 3:
# The default debug level is 0.
#    DEBUG = 1
#    DEBUG = 2
DEBUG = 0

# The MONITORED_PROCESSES variable should be a Python list of quoted regular
# expressions.
# Each item in this list will be compared against the output of "ps -eo args".
# The default is to monitor /sbin/init, which should always be running.
# Examples:
#   MONITORED_PROCESSES = [ "kvm ", "sshd: .*\[priv\]$" ]
#   MONITORED_PROCESSES = [ "mplayer ", "xine ", "vlc " ]
#   MONITORED_PROCESSES = [ "^/sbin/init" ]

############################################################################
####                          MONITORS                                  ####
############################################################################

# The [ProcessMonitor] section lists all the processes to Monitor by using
# regular expressions.
# Each item listed will be compared against the output of "ps -eo args".
# The default is to monitor /sbin/init, which should always be running. 
# Examples:
#  mplayer = "mplayer "
#  sshd = "sshd: .*\[priv\]$"
#  kvm = "kvm "
[ProcessMonitor]
init = "^/sbin/init"

# The [RemoteMonitor] section lists all the UDP port on which to listen
# for data.
# Each item listed will bind a UDP port and listen to data.
# There is no default Remote Monitor.
# Examples:
#  udp1024 = 1024
#  udp9 = 9
[RemoteMonitor]
#udp9 = 9

# The [IOMonitor] section lists all the processes to Monitor for IO
# activity. A regular expressions is used to find the processes PIDs, which
# are later used to monitor IO.
# There is no default IO Monitor.
# Examples:
#  kvm-io = "kvm"
#  mysqld-io = "mysql"
[IOMonitor]
#kvm-io = "kvm"
#mysqld-io = "mysql"

# The [InputMonitor] section lists all the Input Events (in /dev/input) to
# Monitor. It uses the name of the event Monitor in "/dev/input".
# Example:
#  EventX = "mouse0"
#
# Alternatively, it can also monitor any device by the id (/dev/input/by-id).
# This is enabled by adding the "by-id/" prefix, and specifying the device
# to monitor.
# Example:
#  EventY = "by-id/usb-BTC_USB_Multimedia_Cordless_Kit-event-kbd"
#
# This monitor is regularly used to Monitor activy in Mouse and Keyboards
# connected through USB.
# There is no default Input Monitor
# Examples:
#  Event1 = "event1"
#  Event2 = "by-id/usb-BTC_USB_Multimedia_Cordless_Kit-event-mouse"
#
# NOTE: Also note that when using the event name, the user will have to know what
# event the device is using. This can be determined by "ls -l /dev/input/by-id"
[InputMonitor]
#MouseEvent = "event1"
#KeyboardEvent = "event6"
